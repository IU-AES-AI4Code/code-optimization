def activity_selection(activities):
    # Sort the activities by their finish times
    activities.sort(key=lambda x: x[2])

    # Initialize the first activity
    result = [activities[0]]

    # Start from the second activity
    for i in range(1, len(activities)):
        # If the current activity does not conflict with the last added activity, add it
        if activities[i][1] >= result[-1][2]:
            result.append(activities[i])

    return result

# Usage example:
# Each activity is represented by a tuple (name, start_time, finish_time)
activities = [('A1', 0, 6), ('A2', 3, 4), ('A3', 1, 2), ('A4', 5, 9), ('A5', 5, 7), ('A6', 8, 9)]
print(activity_selection(activities))