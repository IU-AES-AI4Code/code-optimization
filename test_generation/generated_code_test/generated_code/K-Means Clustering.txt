import numpy as np

def k_means_clustering(data, k, max_iterations=100):
    # Randomly initialize centroids
    centroids = data[np.random.choice(list(range(data.shape[0])), size=k)]
    
    for _ in range(max_iterations):
        # Assign each data point to the closest centroid
        distances = np.sqrt(((data - centroids[:, np.newaxis]) ** 2).sum(axis=2))
        labels = np.argmin(distances, axis=0)
        
        # Recalculate centroids
        new_centroids = np.array([data[labels==i].mean(axis=0) for i in range(k)])
        if np.all(centroids == new_centroids):
            # Convergence criterion
            break
        centroids = new_centroids
    
    return centroids, labels