def is_safe(graph, color, v, c, colors):
    for i in range(len(graph)):
        if graph[v][i] == 1 and colors[i] == c:
            return False
    return True

def graph_coloring(graph, m, v, colors):
    if v == len(graph):
        return True

    for c in range(1, m+1):
        if is_safe(graph, colors, v, c, colors):
            colors[v] = c
            if graph_coloring(graph, m, v+1, colors):
                return True
            colors[v] = 0

    return False

def min_color(graph):
    m = 0
    for i in range(len(graph)):
        for j in range(len(graph[i])):
            if graph[i][j] == 1 and m < j+1:
                m = j+1
    return m

def color_graph(graph):
    m = min_color(graph)
    colors = [0]*len(graph)
    if not graph_coloring(graph, m, 0, colors):
        print("Solution does not exist")
        return False

    print("Solution exists and the colors are:")
    for i in range(len(graph)):
        print("Vertex", i, "is colored with", colors[i])
    return True