import random

def genetic_algorithm():
    target = "Hello, World!"
    population = [random_string(len(target)) for _ in range(100)]
    generations = 100

    for _ in range(generations):
        population = evolve(population, target)

    for individual in population:
        if fitness(individual, target) == len(target):
            return individual

def random_string(length):
    return ''.join(random.choice('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,.!') for _ in range(length))

def fitness(individual, target):
    return sum(1 for a, b in zip(individual, target) if a == b)

def evolve(population, target):
    new_population = []
    for _ in range(len(population)):
        parent1 = random.choice(population)
        parent2 = random.choice(population)
        child = mutate(crossover(parent1, parent2))
        new_population.append(child)
    return new_population

def crossover(parent1, parent2):
    index = random.randint(0, len(parent1) - 1)
    return parent1[:index] + parent2[index:], parent2[:index] + parent1[index:]

def mutate(child):
    index = random.randint(0, len(child) - 1)
    child_list = list(child)
    child_list[index] = random.choice('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,.!')
    return ''.join(child_list)

print(genetic_algorithm())