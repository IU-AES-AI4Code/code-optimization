def test_prim_mst():
    # Test with a simple graph
    graph = [
        [0, 2, 0, 6, 0],
        [2, 0, 3, 8, 5],
        [0, 3, 0, 0, 7],
        [6, 8, 0, 0, 9],
        [0, 5, 7, 9, 0]
    ]
    expected_mst = [
        (0, 1, 2),
        (0, 3, 6),
        (1, 2, 3),
        (1, 4, 5),
        (2, 4, 7)
    ]
    assert sorted(prim_mst(graph)) == sorted(expected_mst)

    # Test with a graph with multiple edges between the same vertices
    graph = [
        [0, 1, 1, 0, 0],
        [1, 0, 1, 1, 1],
        [1, 1, 0, 1, 1],
        [0, 1, 1, 0, 1],
        [0, 1, 1, 1, 0]
    ]
    expected_mst = [
        (0, 1, 1),
        (0, 2, 1),
        (1, 3, 1),
        (2, 4, 1)
    ]
    assert sorted(prim_mst(graph)) == sorted(expected_mst)

    # Test with a graph with a single vertex
    graph = [[0]]
    expected_mst = []
    assert prim_mst(graph) == expected_mst

    # Test with a graph with no edges
    graph = [
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0]
    ]
    expected_mst = []
    assert prim_mst(graph) == expected_mst

    print("All tests passed.")

test_prim_mst()